{"version":3,"sources":["setup.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","GameBoard.js","ghostMoves.js","Pacman.js","Ghost.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","GameBoard","DOMGrid","pos","object","grid","classList","contains","dotCount","gameWin","div","document","createElement","add","innerHTML","appendChild","level","style","cssText","forEach","square","i","push","classes","remove","deg","transform","character","shouldMove","getNextMove","objectExist","nextMovePos","direction","makeMove","classesToRemove","classesToAdd","rotateDiv","dir","removeObject","addObject","setNewPos","board","createGrid","randomMovement","position","keys","Object","key","Math","floor","random","length","Pacman","speed","startPos","timer","powerPill","e","keyCode","Ghost","name","isScared","gameGrid","querySelector","scoreTable","startButton","POWER_PILL_TIME","GLOBAL_SPEED","gameBoard","createGameBoard","score","powerPillActive","powerPillTimer","playAudio","audio","Audio","play","gameOver","pacman","soundGameOver","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","gameLoop","moveCharacter","soundDot","soundPill","clearTimeout","setTimeout","startGame","soundGameStart","addEventListener","setInterval"],"mappings":";AAuDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAvDA,IAAMA,EAAY,GAuDlB,QAAA,UAAA,EAtDA,IAAMC,EAAY,GAsDlB,QAAA,UAAA,EArDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAkCP,QAAA,WAAA,EA9BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAkBN,QAAA,YAAA,EAdA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"Pacman-Man.60e0f62a.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\r\n\r\n\r\nclass GameBoard{\r\n\tconstructor(DOMGrid) {\r\n\t\tthis.dotCount = 0;\r\n\t\tthis.grid = [];\r\n\t\tthis.DOMGrid = DOMGrid;\r\n\t}\r\n\r\n\tshowGameStatus(gameWin) {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.classList.add('game-status');\r\n\t\tdiv.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER!'}`;\r\n\t\tthis.DOMGrid.appendChild(div);\r\n\t}\r\n\r\n\tcreateGrid(level) {\r\n\t\tthis.document = 0;\r\n\t\tthis.grid = [];\r\n\t\tthis.DOMGrid.innerHTML = '';\r\n\t\tthis.DOMGrid.style.cssText = `grid-template-columns:repeat(${GRID_SIZE},${CELL_SIZE}px)`;\r\n\r\n\t\tlevel.forEach((square ,i) => {\r\n\t\t\tconst div = document.createElement('div');\r\n\t\t\tdiv.classList.add('square', CLASS_LIST[square]);\r\n\t\t\tdiv.style.cssText = `width:${CELL_SIZE}px; height:${CELL_SIZE}px;`;\r\n\t\t\tthis.DOMGrid.appendChild(div);\r\n\t\t\tthis.grid.push(div);\r\n\t\t\tif (CLASS_LIST[square] === OBJECT_TYPE.DOT) this.dotCount++;\r\n\t\t});\r\n\t}\r\n\r\n\taddObject(pos, classes) {\r\n\t\tthis.grid[pos].classList.add(...classes)\r\n\t}\r\n\r\n\tremoveObject(pos, classes) {\r\n\t\tthis.grid[pos].classList.remove(...classes)\r\n\t}\r\n\r\n\tobjectExist = (pos, object) => {\r\n\t\treturn this.grid[pos].classList.contains(object);\r\n\t}\r\n\r\n\trotateDiv(pos, deg) {\r\n\t\tthis.grid[pos].style.transform = `rotate(${deg}deg)`;\r\n\t}\r\n\r\n\tmoveCharacter(character) {\r\n\t\tif (character.shouldMove()) {\r\n\t\t\tconst { nextMovePos, direction } = character.getNextMove(\r\n\t\t\t\tthis.objectExist\r\n\t\t\t);\r\n\t\t\tconst { classesToRemove, classesToAdd } = character.makeMove()\r\n\t\t\tif (character.rotation && nextMovePos !== character.pos) {\r\n\t\t\t\tthis.rotateDiv(nextMovePos, character.dir.rotation);\r\n\t\t\t\tthis.rotateDiv(character.pos, 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeObject(character.pos, classesToRemove);\r\n\t\t\tthis.addObject(nextMovePos, classesToAdd);\r\n\r\n\t\t\tcharacter.setNewPos(nextMovePos, direction);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic createGameBoard(DOMGrid, level) {\r\n\t\tconst board = new this(DOMGrid);\r\n\t\tboard.createGrid(level);\r\n\t\treturn board;\r\n\t}\r\n}\r\n\r\nexport default GameBoard;","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\n\r\n//primitive random movement\r\nexport function randomMovement(position, direction, objectExist) {\r\n\tlet dir = direction;\r\n\tlet nextMovePos = position + dir.movement;\r\n\r\n\t//create an array from the directions object keys\r\n\tconst keys = Object.keys(DIRECTIONS);\r\n\r\n\twhile (\r\n\t\tobjectExist(nextMovePos,OBJECT_TYPE.WALL)|| objectExist(nextMovePos, OBJECT_TYPE.GHOST)\r\n\t) {\r\n\t\t//get a random key from the key array\r\n\t\tconst key = keys[Math.floor(Math.random() * keys.length)];\r\n\r\n\t\t//set the next move\r\n\t\tdir = DIRECTIONS[key];\r\n\r\n\t\t//set the next move\r\n\t\tnextMovePos = position + dir.movement;\r\n\r\n\t}\r\n\r\n\treturn { nextMovePos, direction: dir };\r\n}","import { OBJECT_TYPE, DIRECTIONS } from './setup';\r\n\r\nclass Pacman{\r\n\tconstructor(speed, startPos) {\r\n\t\tthis.pos = startPos;\r\n\t\tthis.speed = speed;\r\n\t\tthis.dir = null;\r\n\t\tthis.timer = 0;\r\n\t\tthis.powerPill = false;\r\n\t\tthis.rotation = true;\r\n\r\n\t}\r\n\r\n\tshouldMove() {\r\n\t\tif (!this.dir) return false;\r\n\r\n\t\tif (this.timer === this.speed) {\r\n\t\t\tthis.timer = 0;\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\tthis.timer++\r\n\t}\r\n\r\n\tgetNextMove(objectExist) {\r\n\t\tlet nextMovePos = this.pos + this.dir.movement;\r\n\r\n\t\tif (\r\n\t\t\tobjectExist(nextMovePos, OBJECT_TYPE.WALL) ||\r\n\t\t\tobjectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\r\n\t\t) {\r\n\t\t\tnextMovePos = this.pos;\r\n\t\t}\r\n\r\n\t\treturn { nextMovePos, direction: this.dir };\r\n\t}\r\n\r\n\tmakeMove() {\r\n\t\tconst classesToRemove = [OBJECT_TYPE.PACMAN];\r\n\t\tconst classesToAdd = [OBJECT_TYPE.PACMAN];\r\n\t\t\r\n\t\treturn{classesToRemove,classesToAdd}\r\n\t}\r\n\r\n\tsetNewPos(nextMovePos) {\r\n\t\tthis.pos = nextMovePos;\r\n\r\n\t}\r\n\r\n\thandleKeyInput(e, objectExist) {\r\n\t\tlet dir;\r\n\r\n\t\tif (e.keyCode >= 37 && e.keyCode <= 40) {\r\n\t\t\tdir = DIRECTIONS[e.key];\r\n\t\t} else {\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst nextMovePos = this.pos + dir.movement;\r\n\t\tif (objectExist(nextMovePos, OBJECT_TYPE.WALL) || objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)) return;\r\n\t\tthis.dir = dir;\r\n\r\n\t}\r\n}\r\n\r\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from './setup';\r\n\r\nclass Ghost{\r\n\tconstructor(speed = 5, startPos, movement, name) {\r\n\t\tthis.name = name;\r\n\t\tthis.movement = movement;\r\n\t\tthis.startPos = startPos;\r\n\t\tthis.pos = startPos;\r\n\t\tthis.dir = DIRECTIONS.ArrowRight;\r\n\t\tthis.speed = speed;\r\n\t\tthis.timer = 0;\r\n\t\tthis.isScared = false;\r\n\t\tthis.rotation = false;\r\n\r\n\t}\r\n\r\n\tshouldMove() {\r\n\t\tif (this.timer === this.speed) {\r\n\t\t\tthis.timer = 0;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.timer++;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetNextMove(objectExist) {\r\n\t\tconst { nextMovePos, direction } = this.movement(\r\n\t\t\tthis.pos,\r\n\t\t\tthis.dir,\r\n\t\t\tobjectExist\r\n\t\t);\r\n\t\treturn{nextMovePos,direction}\r\n\t}\r\n\r\n\tmakeMove() {\r\n\t\tconst classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\r\n\t\tlet classesToAdd = [OBJECT_TYPE.GHOST, this.name];\r\n\t\tif (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\r\n\t\treturn { classesToRemove, classesToAdd };\r\n\t}\r\n\r\n\tsetNewPos(nextMovePos, direction) {\r\n\t\tthis.pos = nextMovePos;\r\n\t\tthis.dir = direction;\r\n\r\n\t}\r\n}   \r\n\r\nexport default Ghost;","import { LEVEL, OBJECT_TYPE } from './setup';\nimport GameBoard from './GameBoard';\nimport { randomMovement } from './ghostMoves';\nimport Pacman from './Pacman'\nimport Ghost from './Ghost';\n\n//sounds\nimport soundDot from './sounds/munch.wav'; \nimport soundPill from './sounds/pill.wav'; \nimport soundGameStart from './sounds/game_start.wav'; \nimport soundGameOver from './sounds/death.wav'; \nimport soundGhost from './sounds/eat_ghost.wav'; \n\n\n//DOM elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n//Game constants\nconst POWER_PILL_TIME = 10000;\nconst GLOBAL_SPEED = 80;\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\n\n// initial setup\n\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n//audio\nfunction playAudio(audio) {\n\tconst soundEffect = new Audio(audio);\n\tsoundEffect.play();\n}\n\nfunction gameOver(pacman, grid) {\n\tplayAudio(soundGameOver);\n\tdocument.removeEventListener('keydown', e =>\n\t\tpacman.handleKeyInput(e, gameBoard.objectExist)\n\t)\n\n\tgameBoard.showGameStatus(gameWin);\n\tclearInterval(timer);\n\tstartButton.classList.remove('hide');\n}\n\nfunction checkCollision(pacman, ghosts) {\n\tconst collidedGhost = ghosts.find(ghost => pacman.pos === ghost.pos);\n\tif (collidedGhost) {\n\t\tif (pacman.powerPill) {\n\n\t\t\tplayAudio(soundGhost);\n\n\t\t\tgameBoard.removeObject(collidedGhost.pos, [\n\t\t\t\tOBJECT_TYPE.GHOST,\n\t\t\t\tOBJECT_TYPE.SCARED,\n\t\t\t\tcollidedGhost.name\n\t\t\t]);\n\t\t\tcollidedGhost.pos = collidedGhost.startPos;\n\t\t\tscore += 100;\n\t\t} else {\n\t\t\tgameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n\t\t\tgameBoard.rotateDiv(pacman.pos, 0);\n\t\t\tgameOver(pacman, gameGrid);\n\t\t}\n\n\t}\n}\n\nfunction gameLoop(pacman, ghosts) {\n\tgameBoard.moveCharacter(pacman);\n\tcheckCollision(pacman, ghosts);\n\n\tghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n\tcheckCollision(pacman, ghosts);\n\n\t//check if pacman eats a dot\n\tif (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n\t\tplayAudio(soundDot);\n\t\tgameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n\t\tgameBoard.dotCount--;\n\t\tscore += 10;\n\n\t}\n\n\t//check if pacman eats a powerpill\n\tif (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n\t\tplayAudio(soundPill);\n\t\tgameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\t\tpacman.powerPill = true;\n\t\tscore += 50;\n\n\t\tclearTimeout(powerPillTimer);\n\t\tpowerPillTimer = setTimeout(\n\t\t\t() => (pacman.powerPill = false),\n\t\t\tPOWER_PILL_TIME\n\t\t);\n\t}\n\n\t//change ghost scare mode depending on powerpill\n\tif (pacman.powerPill !== powerPillActive) {\n\t\tpowerPillActive = pacman.powerPill;\n\t\tghosts.forEach((ghost)=>(ghost.isScared = pacman.powerPill));\n\t}\n\n\t//check if all dots have been eaten\n\tif (gameBoard.dotCount === 0) {\n\t\tgameWin = true;\n\t\tgameOver(pacman, ghosts);\n\t}\n\n\t//show the score \n\tscoreTable.innerHTML = score;\n\n}\n\nfunction startGame() {\n\tplayAudio(soundGameStart)\n\tgameWin = false;\n\tpowerPillActive = false;\n\tscore = 0;\n\n\tstartButton.classList.add('hide');\n\t\n\tgameBoard.createGrid(LEVEL);\n\n\tconst pacman = new Pacman(2, 287);\n\tgameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n\tdocument.addEventListener('keydown', (e) =>\n\t\tpacman.handleKeyInput(e,gameBoard.objectExist)\n\t);\n\n\tconst ghosts = [\n\t\tnew Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n\t\tnew Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n\t\tnew Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n\t\tnew Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE),\n\t];\n\n\ttimer = setInterval(() => gameLoop(pacman,ghosts), GLOBAL_SPEED);\n}\n\n//initialize game\nstartButton.addEventListener('click', startGame);"]}